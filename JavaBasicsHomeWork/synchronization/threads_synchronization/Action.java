package threads_synchronization;

public class Action extends Thread {
	Account acc; //Ð¡ ÐºÐ°ÐºÐ¾Ð³Ð¾ Ð°ÐºÐºÐ°ÑƒÐ½Ñ‚Ð°
	int withdraw; //..Ñ?ÐºÐ¾Ð»ÑŒÐºÐ¾ Ñ?Ð½Ñ?Ñ‚ÑŒ.
	public Action(Account acc, int withdraw) {
		this.acc = acc;
		this.withdraw = withdraw;
	}
	@Override
	public void run() {
		// Ð¡Ð¸Ð½Ñ…Ñ€Ð¾Ð½Ð¸Ð·Ð°Ñ†Ð¸Ñ? Ð½Ð° Ð°ÐºÐºÐ°ÑƒÐ½Ñ‚Ðµ
		synchronized (acc) {
			// Ð¡ÐºÐ¾Ð»ÑŒÐºÐ¾ Ð¾Ñ?Ñ‚Ð°Ñ‚Ð¾Ðº Ð½Ð° Ñ?Ñ‡ÐµÑ‚Ñƒ?
			int has = acc.get();
			// ÐžÑ?Ñ‚Ð°Ñ‚Ð¾Ðº Ð¿Ð¾Ð·Ð²Ð¾Ð»Ñ?ÐµÑ‚ Ñ?Ð½Ñ?Ñ‚ÑŒ Ð½ÑƒÐ¶Ð½ÑƒÑŽ Ñ?ÑƒÐ¼Ð¼Ñƒ?
			if (has >= withdraw && has - withdraw >= acc.MIN_ALLOWED_BALANCE) {
				// Ð£Ñ?Ñ‚Ð°Ð½Ð°Ð²Ð»Ð¸Ð²Ð°ÐµÐ¼ Ð½Ð¾Ð²Ñ‹Ð¹ Ð±Ð°Ð»Ð°Ð½Ñ?
				acc.set(acc.get() - withdraw);
			} else if (has >= withdraw && has - withdraw < acc.MIN_ALLOWED_BALANCE){
				acc.set(acc.MIN_ALLOWED_BALANCE);
			}
		}
	}
}